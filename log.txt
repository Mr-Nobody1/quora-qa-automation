{
  child_process: {
    _forkChild: [Function: _forkChild],
    ChildProcess: [Function: ChildProcess],
    exec: [Function: exec],
    execFile: [Function: execFile],
    execFileSync: [Function: execFileSync],
    execSync: [Function: execSync],
    fork: [Function: fork],
    spawn: [Function: spawn],
    spawnSync: [Function: spawnSync]
  },
  fs: {
    appendFile: [Function: appendFile],
    appendFileSync: [Function: appendFileSync],
    access: [Function: access],
    accessSync: [Function: accessSync],
    chown: [Function: chown],
    chownSync: [Function: chownSync],
    chmod: [Function: chmod],
    chmodSync: [Function: chmodSync],
    close: [Function: close],
    closeSync: [Function: closeSync],
    copyFile: [Function: copyFile],
    copyFileSync: [Function: copyFileSync],
    cp: [Function: cp],
    cpSync: [Function: cpSync],
    createReadStream: [Function: createReadStream],
    createWriteStream: [Function: createWriteStream],
    exists: [Function: exists],
    existsSync: [Function: existsSync],
    fchown: [Function: fchown],
    fchownSync: [Function: fchownSync],
    fchmod: [Function: fchmod],
    fchmodSync: [Function: fchmodSync],
    fdatasync: [Function: fdatasync],
    fdatasyncSync: [Function: fdatasyncSync],
    fstat: [Function: fstat],
    fstatSync: [Function: fstatSync],
    fsync: [Function: fsync],
    fsyncSync: [Function: fsyncSync],
    ftruncate: [Function: ftruncate],
    ftruncateSync: [Function: ftruncateSync],
    futimes: [Function: futimes],
    futimesSync: [Function: futimesSync],
    lchown: [Function: lchown],
    lchownSync: [Function: lchownSync],
    lchmod: undefined,
    lchmodSync: undefined,
    link: [Function: link],
    linkSync: [Function: linkSync],
    lstat: [Function: lstat],
    lstatSync: [Function: lstatSync],
    lutimes: [Function: lutimes],
    lutimesSync: [Function: lutimesSync],
    mkdir: [Function: mkdir],
    mkdirSync: [Function: mkdirSync],
    mkdtemp: [Function: mkdtemp],
    mkdtempSync: [Function: mkdtempSync],
    open: [Function: open],
    openSync: [Function: openSync],
    opendir: [Function: opendir],
    opendirSync: [Function: opendirSync],
    readdir: [Function: readdir],
    readdirSync: [Function: readdirSync],
    read: [Function: read],
    readSync: [Function: readSync],
    readv: [Function: readv],
    readvSync: [Function: readvSync],
    readFile: [Function: readFile],
    readFileSync: [Function: readFileSync],
    readlink: [Function: readlink],
    readlinkSync: [Function: readlinkSync],
    realpath: [Function: realpath] { native: [Function (anonymous)] },
    realpathSync: [Function: realpathSync] { native: [Function (anonymous)] },
    rename: [Function: rename],
    renameSync: [Function: renameSync],
    rm: [Function: rm],
    rmSync: [Function: rmSync],
    rmdir: [Function: rmdir],
    rmdirSync: [Function: rmdirSync],
    stat: [Function: stat],
    statSync: [Function: statSync],
    symlink: [Function: symlink],
    symlinkSync: [Function: symlinkSync],
    truncate: [Function: truncate],
    truncateSync: [Function: truncateSync],
    unwatchFile: [Function: unwatchFile],
    unlink: [Function: unlink],
    unlinkSync: [Function: unlinkSync],
    utimes: [Function: utimes],
    utimesSync: [Function: utimesSync],
    watch: [Function: watch],
    watchFile: [Function: watchFile],
    writeFile: [Function: writeFile],
    writeFileSync: [Function: writeFileSync],
    write: [Function: write],
    writeSync: [Function: writeSync],
    writev: [Function: writev],
    writevSync: [Function: writevSync],
    Dir: [class Dir],
    Dirent: [class Dirent],
    Stats: [Function: Stats],
    ReadStream: [Getter/Setter],
    WriteStream: [Getter/Setter],
    FileReadStream: [Getter/Setter],
    FileWriteStream: [Getter/Setter],
    _toUnixTimestamp: [Function: toUnixTimestamp],
    F_OK: 0,
    R_OK: 4,
    W_OK: 2,
    X_OK: 1,
    constants: [Object: null prototype] {
      UV_FS_SYMLINK_DIR: 1,
      UV_FS_SYMLINK_JUNCTION: 2,
      O_RDONLY: 0,
      O_WRONLY: 1,
      O_RDWR: 2,
      UV_DIRENT_UNKNOWN: 0,
      UV_DIRENT_FILE: 1,
      UV_DIRENT_DIR: 2,
      UV_DIRENT_LINK: 3,
      UV_DIRENT_FIFO: 4,
      UV_DIRENT_SOCKET: 5,
      UV_DIRENT_CHAR: 6,
      UV_DIRENT_BLOCK: 7,
      S_IFMT: 61440,
      S_IFREG: 32768,
      S_IFDIR: 16384,
      S_IFCHR: 8192,
      S_IFBLK: 24576,
      S_IFIFO: 4096,
      S_IFLNK: 40960,
      S_IFSOCK: 49152,
      O_CREAT: 64,
      O_EXCL: 128,
      UV_FS_O_FILEMAP: 0,
      O_NOCTTY: 256,
      O_TRUNC: 512,
      O_APPEND: 1024,
      O_DIRECTORY: 65536,
      O_NOATIME: 262144,
      O_NOFOLLOW: 131072,
      O_SYNC: 1052672,
      O_DSYNC: 4096,
      O_DIRECT: 16384,
      O_NONBLOCK: 2048,
      S_IRWXU: 448,
      S_IRUSR: 256,
      S_IWUSR: 128,
      S_IXUSR: 64,
      S_IRWXG: 56,
      S_IRGRP: 32,
      S_IWGRP: 16,
      S_IXGRP: 8,
      S_IRWXO: 7,
      S_IROTH: 4,
      S_IWOTH: 2,
      S_IXOTH: 1,
      F_OK: 0,
      R_OK: 4,
      W_OK: 2,
      X_OK: 1,
      UV_FS_COPYFILE_EXCL: 1,
      COPYFILE_EXCL: 1,
      UV_FS_COPYFILE_FICLONE: 2,
      COPYFILE_FICLONE: 2,
      UV_FS_COPYFILE_FICLONE_FORCE: 4,
      COPYFILE_FICLONE_FORCE: 4
    },
    promises: [Getter]
  },
  openai: {
    CreateImageRequestSizeEnum: [Getter],
    CreateImageRequestResponseFormatEnum: [Getter],
    OpenAIApiAxiosParamCreator: [Getter],
    OpenAIApiFp: [Getter],
    OpenAIApiFactory: [Getter],
    OpenAIApi: [Getter],
    Configuration: [Getter]
  },
  'selenium-webdriver': {
    Browser: {
      CHROME: 'chrome',
      EDGE: 'MicrosoftEdge',
      FIREFOX: 'firefox',
      INTERNET_EXPLORER: 'internet explorer',
      SAFARI: 'safari'
    },
    Builder: [class Builder],
    Button: { LEFT: 0, MIDDLE: 1, RIGHT: 2, BACK: 3, FORWARD: 4 },
    By: [class name(name) {
    return By.css('*[name="' + escapeCss(name) + '"]')
  }],
    RelativeBy: [class RelativeBy],
    withTagName: [Function: withTagName],
    locateWith: [Function: locateWith],
    Capabilities: [class Capabilities],
    Capability: {
      ACCEPT_INSECURE_TLS_CERTS: 'acceptInsecureCerts',
      BROWSER_NAME: 'browserName',
      BROWSER_VERSION: 'browserVersion',
      LOGGING_PREFS: 'goog:loggingPrefs',
      PAGE_LOAD_STRATEGY: 'pageLoadStrategy',
      PLATFORM_NAME: 'platformName',
      PROXY: 'proxy',
      SET_WINDOW_RECT: 'setWindowRect',
      TIMEOUTS: 'timeouts',
      UNHANDLED_PROMPT_BEHAVIOR: 'unhandledPromptBehavior',
      STRICT_FILE_INTERACTABILITY: 'strictFileInteractability'
    },
    Condition: [class Condition],
    FileDetector: [class FileDetector],
    Key: {
      NULL: '',
      CANCEL: '',
      HELP: '',
      BACK_SPACE: '',
      TAB: '',
      CLEAR: '',
      RETURN: '',
      ENTER: '',
      SHIFT: '',
      CONTROL: '',
      ALT: '',
      PAUSE: '',
      ESCAPE: '',
      SPACE: '',
      PAGE_UP: '',
      PAGE_DOWN: '',
      END: '',
      HOME: '',
      ARROW_LEFT: '',
      LEFT: '',
      ARROW_UP: '',
      UP: '',
      ARROW_RIGHT: '',
      RIGHT: '',
      ARROW_DOWN: '',
      DOWN: '',
      INSERT: '',
      DELETE: '',
      SEMICOLON: '',
      EQUALS: '',
      NUMPAD0: '',
      NUMPAD1: '',
      NUMPAD2: '',
      NUMPAD3: '',
      NUMPAD4: '',
      NUMPAD5: '',
      NUMPAD6: '',
      NUMPAD7: '',
      NUMPAD8: '',
      NUMPAD9: '',
      MULTIPLY: '',
      ADD: '',
      SEPARATOR: '',
      SUBTRACT: '',
      DECIMAL: '',
      DIVIDE: '',
      F1: '',
      F2: '',
      F3: '',
      F4: '',
      F5: '',
      F6: '',
      F7: '',
      F8: '',
      F9: '',
      F10: '',
      F11: '',
      F12: '',
      COMMAND: '',
      META: '',
      ZENKAKU_HANKAKU: '',
      chord: [Function (anonymous)]
    },
    Origin: { POINTER: 'pointer', VIEWPORT: 'viewport' },
    Session: [class Session],
    ThenableWebDriver: [class ThenableWebDriver],
    WebDriver: [class WebDriver],
    WebElement: [class WebElement],
    WebElementCondition: [class WebElementCondition extends Condition],
    WebElementPromise: [class WebElementPromise extends WebElement],
    error: {
      ErrorCode: {
        SUCCESS: 0,
        NO_SUCH_SESSION: 6,
        NO_SUCH_ELEMENT: 7,
        NO_SUCH_FRAME: 8,
        UNKNOWN_COMMAND: 9,
        UNSUPPORTED_OPERATION: 9,
        STALE_ELEMENT_REFERENCE: 10,
        ELEMENT_NOT_VISIBLE: 11,
        INVALID_ELEMENT_STATE: 12,
        UNKNOWN_ERROR: 13,
        ELEMENT_NOT_SELECTABLE: 15,
        JAVASCRIPT_ERROR: 17,
        XPATH_LOOKUP_ERROR: 19,
        TIMEOUT: 21,
        NO_SUCH_WINDOW: 23,
        INVALID_COOKIE_DOMAIN: 24,
        UNABLE_TO_SET_COOKIE: 25,
        UNEXPECTED_ALERT_OPEN: 26,
        NO_SUCH_ALERT: 27,
        SCRIPT_TIMEOUT: 28,
        INVALID_ELEMENT_COORDINATES: 29,
        IME_NOT_AVAILABLE: 30,
        IME_ENGINE_ACTIVATION_FAILED: 31,
        INVALID_SELECTOR_ERROR: 32,
        SESSION_NOT_CREATED: 33,
        MOVE_TARGET_OUT_OF_BOUNDS: 34,
        SQL_DATABASE_ERROR: 35,
        INVALID_XPATH_SELECTOR: 51,
        INVALID_XPATH_SELECTOR_RETURN_TYPE: 52,
        ELEMENT_NOT_INTERACTABLE: 60,
        INVALID_ARGUMENT: 61,
        NO_SUCH_COOKIE: 62,
        UNABLE_TO_CAPTURE_SCREEN: 63,
        ELEMENT_CLICK_INTERCEPTED: 64,
        METHOD_NOT_ALLOWED: 405
      },
      WebDriverError: [class WebDriverError extends Error],
      DetachedShadowRootError: [class DetachedShadowRootError extends WebDriverError],
      ElementClickInterceptedError: [class ElementClickInterceptedError extends WebDriverError],
      ElementNotInteractableError: [class ElementNotInteractableError extends WebDriverError],
      ElementNotSelectableError: [class ElementNotSelectableError extends WebDriverError],
      InsecureCertificateError: [class InsecureCertificateError extends WebDriverError],
      InvalidArgumentError: [class InvalidArgumentError extends WebDriverError],
      InvalidCookieDomainError: [class InvalidCookieDomainError extends WebDriverError],
      InvalidCoordinatesError: [class InvalidCoordinatesError extends WebDriverError],
      InvalidElementStateError: [class InvalidElementStateError extends WebDriverError],
      InvalidSelectorError: [class InvalidSelectorError extends WebDriverError],
      JavascriptError: [class JavascriptError extends WebDriverError],
      MoveTargetOutOfBoundsError: [class MoveTargetOutOfBoundsError extends WebDriverError],
      NoSuchAlertError: [class NoSuchAlertError extends WebDriverError],
      NoSuchCookieError: [class NoSuchCookieError extends WebDriverError],
      NoSuchElementError: [class NoSuchElementError extends WebDriverError],
      NoSuchFrameError: [class NoSuchFrameError extends WebDriverError],
      NoSuchShadowRootError: [class NoSuchShadowRootError extends WebDriverError],
      NoSuchSessionError: [class NoSuchSessionError extends WebDriverError],
      NoSuchWindowError: [class NoSuchWindowError extends WebDriverError],
      ScriptTimeoutError: [class ScriptTimeoutError extends WebDriverError],
      SessionNotCreatedError: [class SessionNotCreatedError extends WebDriverError],
      StaleElementReferenceError: [class StaleElementReferenceError extends WebDriverError],
      TimeoutError: [class TimeoutError extends WebDriverError],
      UnableToSetCookieError: [class UnableToSetCookieError extends WebDriverError],
      UnableToCaptureScreenError: [class UnableToCaptureScreenError extends WebDriverError],
      UnexpectedAlertOpenError: [class UnexpectedAlertOpenError extends WebDriverError],
      UnknownCommandError: [class UnknownCommandError extends WebDriverError],
      UnknownMethodError: [class UnknownMethodError extends WebDriverError],
      UnsupportedOperationError: [class UnsupportedOperationError extends WebDriverError],
      checkLegacyResponse: [Function: checkLegacyResponse],
      encodeError: [Function: encodeError],
      isErrorResponse: [Function: isErrorResponse],
      throwDecodedError: [Function: throwDecodedError]
    },
    logging: {
      Entry: [class Entry],
      Level: [class Level] {
        OFF: Level { name_: 'OFF', value_: Infinity },
        SEVERE: Level { name_: 'SEVERE', value_: 1000 },
        WARNING: Level { name_: 'WARNING', value_: 900 },
        INFO: Level { name_: 'INFO', value_: 800 },
        DEBUG: Level { name_: 'DEBUG', value_: 700 },
        FINE: Level { name_: 'FINE', value_: 500 },
        FINER: Level { name_: 'FINER', value_: 400 },
        FINEST: Level { name_: 'FINEST', value_: 300 },
        ALL: Level { name_: 'ALL', value_: 0 }
      },
      LogManager: [class LogManager],
      Logger: [class Logger],
      Preferences: [class Preferences],
      Type: {
        BROWSER: 'browser',
        CLIENT: 'client',
        DRIVER: 'driver',
        PERFORMANCE: 'performance',
        SERVER: 'server'
      },
      addConsoleHandler: [Function: addConsoleHandler],
      getLevel: [Function: getLevel],
      getLogger: [Function: getLogger],
      installConsoleHandler: [Function: installConsoleHandler],
      removeConsoleHandler: [Function: removeConsoleHandler]
    },
    promise: {
      checkedNodeCall: [Function: checkedNodeCall],
      delayed: [Function: delayed],
      filter: [AsyncFunction: filter],
      finally: [AsyncFunction: thenFinally],
      fullyResolved: [AsyncFunction: fullyResolved],
      isPromise: [Function: isPromise],
      map: [AsyncFunction: map]
    },
    until: {
      elementTextMatches: [Function: elementTextMatches],
      elementTextContains: [Function: elementTextContains],
      elementTextIs: [Function: elementTextIs],
      elementIsNotSelected: [Function: elementIsNotSelected],
      elementIsSelected: [Function: elementIsSelected],
      elementIsDisabled: [Function: elementIsDisabled],
      ableToSwitchToFrame: [Function: ableToSwitchToFrame],
      elementIsEnabled: [Function: elementIsEnabled],
      elementIsNotVisible: [Function: elementIsNotVisible],
      elementIsVisible: [Function: elementIsVisible],
      stalenessOf: [Function: stalenessOf],
      elementsLocated: [Function: elementsLocated],
      elementLocated: [Function: elementLocated],
      urlMatches: [Function: urlMatches],
      urlContains: [Function: urlContains],
      urlIs: [Function: urlIs],
      titleMatches: [Function: titleMatches],
      titleContains: [Function: titleContains],
      alertIsPresent: [Function: alertIsPresent],
      titleIs: [Function: titleIs]
    },
    Select: [class Select]
  },
  'selenium-webdriver/chrome': {
    Driver: [class Driver extends Driver],
    Options: [class Options extends Options],
    ServiceBuilder: [class ServiceBuilder extends ServiceBuilder],
    locateSynchronously: [Function: locateSynchronously]
  },
  sendkeys: <ref *1> [Function (anonymous)] {
    default: [Circular *1],
    sync: [Function: sendKeys]
  },
  util: {
    _errnoException: [Function: __node_internal_errnoException],
    _exceptionWithHostPort: [Function: __node_internal_exceptionWithHostPort],
    _extend: [Function: _extend],
    callbackify: [Function: callbackify],
    debug: [Function: debuglog],
    debuglog: [Function: debuglog],
    deprecate: [Function: deprecate],
    format: [Function: format],
    formatWithOptions: [Function: formatWithOptions],
    getSystemErrorMap: [Function: getSystemErrorMap],
    getSystemErrorName: [Function: getSystemErrorName],
    inherits: [Function: inherits],
    inspect: [Function: inspect] {
      custom: Symbol(nodejs.util.inspect.custom),
      colors: [Object: null prototype] {
        reset: [ 0, 0 ],
        bold: [ 1, 22 ],
        dim: [ 2, 22 ],
        italic: [ 3, 23 ],
        underline: [ 4, 24 ],
        blink: [ 5, 25 ],
        inverse: [ 7, 27 ],
        hidden: [ 8, 28 ],
        strikethrough: [ 9, 29 ],
        doubleunderline: [ 21, 24 ],
        black: [ 30, 39 ],
        red: [ 31, 39 ],
        green: [ 32, 39 ],
        yellow: [ 33, 39 ],
        blue: [ 34, 39 ],
        magenta: [ 35, 39 ],
        cyan: [ 36, 39 ],
        white: [ 37, 39 ],
        bgBlack: [ 40, 49 ],
        bgRed: [ 41, 49 ],
        bgGreen: [ 42, 49 ],
        bgYellow: [ 43, 49 ],
        bgBlue: [ 44, 49 ],
        bgMagenta: [ 45, 49 ],
        bgCyan: [ 46, 49 ],
        bgWhite: [ 47, 49 ],
        framed: [ 51, 54 ],
        overlined: [ 53, 55 ],
        gray: [ 90, 39 ],
        redBright: [ 91, 39 ],
        greenBright: [ 92, 39 ],
        yellowBright: [ 93, 39 ],
        blueBright: [ 94, 39 ],
        magentaBright: [ 95, 39 ],
        cyanBright: [ 96, 39 ],
        whiteBright: [ 97, 39 ],
        bgGray: [ 100, 49 ],
        bgRedBright: [ 101, 49 ],
        bgGreenBright: [ 102, 49 ],
        bgYellowBright: [ 103, 49 ],
        bgBlueBright: [ 104, 49 ],
        bgMagentaBright: [ 105, 49 ],
        bgCyanBright: [ 106, 49 ],
        bgWhiteBright: [ 107, 49 ]
      },
      styles: [Object: null prototype] {
        special: 'cyan',
        number: 'yellow',
        bigint: 'yellow',
        boolean: 'yellow',
        undefined: 'grey',
        null: 'bold',
        string: 'green',
        symbol: 'green',
        date: 'magenta',
        regexp: 'red',
        module: 'underline'
      }
    },
    isArray: [Function: isArray],
    isBoolean: [Function: isBoolean],
    isBuffer: [Function: isBuffer],
    isDeepStrictEqual: [Function: isDeepStrictEqual],
    isNull: [Function: isNull],
    isNullOrUndefined: [Function: isNullOrUndefined],
    isNumber: [Function: isNumber],
    isString: [Function: isString],
    isSymbol: [Function: isSymbol],
    isUndefined: [Function: isUndefined],
    isRegExp: [Function: isRegExp],
    isObject: [Function: isObject],
    isDate: [Function: isDate],
    isError: [Function: isError],
    isFunction: [Function: isFunction],
    isPrimitive: [Function: isPrimitive],
    log: [Function: log],
    parseArgs: [Function: parseArgs],
    promisify: [Function: promisify] {
      custom: Symbol(nodejs.util.promisify.custom)
    },
    stripVTControlCharacters: [Function: stripVTControlCharacters],
    toUSVString: [Function: toUSVString],
    TextDecoder: [class TextDecoder],
    TextEncoder: [class TextEncoder],
    types: {
      isExternal: [Function: isExternal],
      isDate: [Function: isDate],
      isArgumentsObject: [Function: isArgumentsObject],
      isBigIntObject: [Function: isBigIntObject],
      isBooleanObject: [Function: isBooleanObject],
      isNumberObject: [Function: isNumberObject],
      isStringObject: [Function: isStringObject],
      isSymbolObject: [Function: isSymbolObject],
      isNativeError: [Function: isNativeError],
      isRegExp: [Function: isRegExp],
      isAsyncFunction: [Function: isAsyncFunction],
      isGeneratorFunction: [Function: isGeneratorFunction],
      isGeneratorObject: [Function: isGeneratorObject],
      isPromise: [Function: isPromise],
      isMap: [Function: isMap],
      isSet: [Function: isSet],
      isMapIterator: [Function: isMapIterator],
      isSetIterator: [Function: isSetIterator],
      isWeakMap: [Function: isWeakMap],
      isWeakSet: [Function: isWeakSet],
      isArrayBuffer: [Function: isArrayBuffer],
      isDataView: [Function: isDataView],
      isSharedArrayBuffer: [Function: isSharedArrayBuffer],
      isProxy: [Function: isProxy],
      isModuleNamespaceObject: [Function: isModuleNamespaceObject],
      isAnyArrayBuffer: [Function: isAnyArrayBuffer],
      isBoxedPrimitive: [Function: isBoxedPrimitive],
      isArrayBufferView: [Function: isView],
      isTypedArray: [Function: isTypedArray],
      isUint8Array: [Function: isUint8Array],
      isUint8ClampedArray: [Function: isUint8ClampedArray],
      isUint16Array: [Function: isUint16Array],
      isUint32Array: [Function: isUint32Array],
      isInt8Array: [Function: isInt8Array],
      isInt16Array: [Function: isInt16Array],
      isInt32Array: [Function: isInt32Array],
      isFloat32Array: [Function: isFloat32Array],
      isFloat64Array: [Function: isFloat64Array],
      isBigInt64Array: [Function: isBigInt64Array],
      isBigUint64Array: [Function: isBigUint64Array],
      isKeyObject: [Function: value],
      isCryptoKey: [Function: value]
    }
  }
}